from mindstorms import MSHub, Motor, MotorPair, DistanceSensor
from mindstorms.control import wait_for_seconds
from math import copysign

hub = MSHub()
motor_pair_back_legs = MotorPair('A', 'B')
motor_pair_front_legs = MotorPair('C', 'D')
motors = (Motor('A'), Motor('B'), Motor('C'), Motor('D'))
distance_sensor = DistanceSensor('E')

# This is Gelo’s animation.
animation = {
    'Pulse': [
        '00000:00000:00009:00000:00000',
        '00000:00000:98765:00000:00000'
    ]
}

# This sets Gelo’s walking speed.
def set_speed(speed):
    new_speed = round(speed*0.3 + copysign(30, speed))
    new_speed = 0 if speed == 0 else max(-60, min(new_speed, 60))
    motor_pair_back_legs.set_default_speed(new_speed)
    motor_pair_front_legs.set_default_speed(new_speed)

# This sets Gelo’s legs to the walking position for the specified direction.
def set_legs_position(direction):
    position = {
        'walk': (270, 270, 90, 90),
        'left': (270, 45, 90, 315),
        'right': (135, 270, 225, 90)
    }
    positions = position.get(direction, position['walk'])
    for motor, pos in zip(motors, positions):
        motor.run_to_position(pos)

# This makes Gelo walk in the specified direction for the specified number of seconds.
def walk_for_seconds(direction, seconds):
    set_legs_position(direction)
    default_speed = motor_pair_back_legs.get_default_speed()
    walk_speed = {
        'forward': default_speed,
        'backward': -default_speed,
    }
    speed = walk_speed.get(direction, 50)
    motor_pair_back_legs.start(speed=speed)
    motor_pair_front_legs.start(speed=speed)
    wait_for_seconds(seconds)
    motor_pair_back_legs.stop()
    motor_pair_front_legs.stop()

distance_sensor.light_up_all()
hub.light_matrix.set_orientation('left')
hub.light_matrix.start_animation(animation['Pulse'], 2, True, 'slide left')
hub.speaker.play_sound('Initialize')
set_speed(80)

# This controls Gelo’s movement.
walk_for_seconds('forward', 3)
